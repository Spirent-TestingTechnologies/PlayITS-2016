module RFIDModule {
	import from Header all;
	
	testcase CorrectRFIDTestcase() runs on me system System {
		setverdict(RFIDTest_internal(OWNER_RFID, true));
	}
	
	testcase FalseRFIDTestcase() runs on me system System {
		setverdict(RFIDTest_internal(FALSE_RFID, false));
	}
	
	/**
	 * @desc tests whether the code on the RFID chip is valid
	 * @param rfid, the RFID code that is to be verified
	 * @param expectPass, the expected result of the testcase
	 */
	function RFIDTest_internal(RFID rfid, boolean expectPass) runs on me system System return verdicttype {
		var verdicttype result;
		
		setup();
			
		result := checkRFID(rfid, 10.0);
		
		tearDown();
		
		if((result == pass and expectPass) or (result == fail and not expectPass)){
			return pass;
		} else if((result == fail and expectPass) or (result == pass and not expectPass)){
			return fail;
		} else {
			return inconc;
		}
	}
	
	function executeRFIDTestcases() {
		execute(CorrectRFIDTestcase());
		execute(FalseRFIDTestcase());
	}
}
