module RFIDModule {
	import from Header all;
	
	testcase CorrectRFIDTest() runs on me system SUT {
		map(self:rfidSensor, system:rfidSensor);
		
		var default alts := activate(alt_default());
			
		rfidSensor.send(ReadRFID:{});
			
		setverdict(f_checkRFID(OWNER_RFID, 10.0));
	}
	
	testcase FalseRFIDTest() runs on me system SUT {
		map(self:rfidSensor, system:rfidSensor);
		
		var default alts := activate(alt_default());
			
		rfidSensor.send(ReadRFID:{});
		
		var verdicttype result := f_checkRFID(OWNER_RFID, 10.0);
		
		if(result == pass){
			setverdict(fail);
		} else if(result == fail){
			setverdict(pass);
		} else {
			setverdict(inconc);
		}
	}
	
	testcase TheftDetect() runs on me system SUT{
		map(self:rfidSensor, system:rfidSensor);
		map(self:buttonSensor, system:buttonSensor);
		map(self:lightSensor, system:lightSensor);
		
		var default alts := activate(alt_default());
		var verdicttype v_rfid := null;
		var verdicttype v_door := null;
		var verdicttype v_elights := null;
		var charstring rfid := null;
		
		rfidSensor.send(ReadRFID:{});
		buttonSensor.send(ReadButtonStateStart:{});
		lightSensor.send(ReadLightSwitchStart:{});
		
		
		}
	}
}